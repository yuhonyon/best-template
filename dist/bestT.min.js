!(function(e, t) {
  'object' == typeof exports && 'object' == typeof module
    ? (module.exports = t())
    : 'function' == typeof define && define.amd
    ? define('bestT', [], t)
    : 'object' == typeof exports
    ? (exports.bestT = t())
    : (e.bestT = t())
})('undefined' != typeof self ? self : this, function() {
  return (function(e) {
    var t = {}
    function n(r) {
      if (t[r]) return t[r].exports
      var o = (t[r] = { i: r, l: !1, exports: {} })
      return e[r].call(o.exports, o, o.exports, n), (o.l = !0), o.exports
    }
    return (
      (n.m = e),
      (n.c = t),
      (n.d = function(e, t, r) {
        n.o(e, t) ||
          Object.defineProperty(e, t, {
            configurable: !1,
            enumerable: !0,
            get: r
          })
      }),
      (n.n = function(e) {
        var t =
          e && e.__esModule
            ? function() {
                return e.default
              }
            : function() {
                return e
              }
        return n.d(t, 'a', t), t
      }),
      (n.o = function(e, t) {
        return Object.prototype.hasOwnProperty.call(e, t)
      }),
      (n.p = ''),
      n((n.s = 0))
    )
  })([
    function(e, t, n) {
      'use strict'
      var r =
          'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
            ? function(e) {
                return typeof e
              }
            : function(e) {
                return e &&
                  'function' == typeof Symbol &&
                  e.constructor === Symbol &&
                  e !== Symbol.prototype
                  ? 'symbol'
                  : typeof e
              },
        o = {
          templateSettings: {
            evaluate: /\<\%([\s\S]+?(\}?)+)\%\>/g,
            interpolate: /\<\%=([\s\S]+?)\%\>/g,
            encode: /\<\%!([\s\S]+?)\%\>/g,
            use: /\<\%#([\s\S]+?)\%\>/g,
            useParams: /(^|[^\w$])def(?:\.|\[[\'\"])([\w$\.]+)(?:[\'\"]\])?\s*\:\s*([\w$\.]+|\"[^\"]+\"|\'[^\']+\'|\{[^\}]+\})/g,
            define: /\<\%##\s*([\w\.$]+)\s*(\:|=)([\s\S]+?)#\%\>/g,
            defineParams: /^\s*([\w$]+):([\s\S]+)/,
            conditional: /\<\%\?(\?)?\s*([\s\S]*?)\s*\%\>/g,
            iterate: /\<\%~\s*(?:\%\>|([\s\S]+?)\s*\:\s*([\w$]+)\s*(?:\:\s*([\w$]+))?\s*\%\>)/g,
            varname: 'data',
            strip: !0,
            append: !0,
            selfcontained: !1,
            doNotSkipEncoded: !1
          },
          filters: {},
          template: void 0,
          compile: void 0,
          render: void 0,
          log: !0,
          cache: {}
        },
        i = void 0
      ;(o.encodeHTMLSource = function(e) {
        var t = {
            '&': '&#38;',
            '<': '&#60;',
            '>': '&#62;',
            '"': '&#34;',
            "'": '&#39;',
            '/': '&#47;'
          },
          n = e ? /[&<>"'\/]/g : /&(?!#?\w+;)|<|>|"|'|\//g
        return function(e) {
          return e
            ? e.toString().replace(n, function(e) {
                return t[e] || e
              })
            : ''
        }
      }),
        (i = (function() {
          return this || (0, eval)('this')
        })())
      var c = {
          append: { start: "'+(", end: ")+'", startencode: "'+encodeHTML(" },
          split: {
            start: "';out+=(",
            end: ");out+='",
            startencode: "';out+=encodeHTML("
          }
        },
        a = /$^/
      function u(e) {
        return e.replace(/\\('|\\)/g, '$1').replace(/[\r\t\n]/g, ' ')
      }
      ;(o.template = function(e, t, n) {
        var r = (t = t || o.templateSettings).append ? c.append : c.split,
          s = void 0,
          l = 0,
          f = void 0,
          d =
            t.use || t.define
              ? (function e(t, n, r) {
                  return ('string' == typeof n ? n : n.toString())
                    .replace(t.define || a, function(e, n, o, i) {
                      return (
                        0 === n.indexOf('def.') && (n = n.substring(4)),
                        n in r ||
                          (':' === o
                            ? (t.defineParams &&
                                i.replace(t.defineParams, function(e, t, o) {
                                  r[n] = { arg: t, text: o }
                                }),
                              n in r || (r[n] = i))
                            : new Function('def', "def['" + n + "']=" + i)(r)),
                        ''
                      )
                    })
                    .replace(t.use || a, function(n, o) {
                      t.useParams &&
                        (o = o.replace(t.useParams, function(e, t, n, o) {
                          if (r[n] && r[n].arg && o) {
                            var i = (n + ':' + o).replace(/'|\\/g, '_')
                            return (
                              (r.__exp = r.__exp || {}),
                              (r.__exp[i] = r[n].text.replace(
                                new RegExp(
                                  '(^|[^\\w$])' + r[n].arg + '([^\\w$])',
                                  'g'
                                ),
                                '$1' + o + '$2'
                              )),
                              t + "def.__exp['" + i + "']"
                            )
                          }
                        }))
                      var i = new Function('def', 'return ' + o)(r)
                      return i ? e(t, i, r) : i
                    })
                })(t, e, n || {})
              : e
        ;(d = (
          "var out='" +
          (t.strip
            ? d
                .replace(/(^|\r|\n)\t* +| +\t*(\r|\n|$)/g, ' ')
                .replace(/\r|\n|\t|\/\*[\s\S]*?\*\//g, '')
            : d
          )
            .replace(/'|\\/g, '\\$&')
            .replace(t.interpolate || a, function(e, t) {
              if (/\|/.test(t)) {
                var n = void 0
                ;(n = /\|\|/.test(t)
                  ? (t = (t = (t = t.replace(/\|\|/g, '@#$*')).replace(
                      /\|/g,
                      '*$#@'
                    )).replace(/@#\$\*/g, '||')).split('*$#@')
                  : t.split('|')),
                  (t = (function(e) {
                    for (var t = e[0], n = 1; n < e.length; n++)
                      if (/\(/.test(e[n])) {
                        var r = e[n].split('(')
                        if (!o.filters[r[0]])
                          throw new Error('过滤器' + r[0] + '不存在')
                        t = "filters['" + r[0] + "'](" + t + ',' + r[1]
                      } else {
                        if (!o.filters[e[n]])
                          throw new Error('过滤器' + e[n] + '不存在')
                        t = "filters['" + e[n] + "'](" + t + ')'
                      }
                    return t
                  })(n))
              }
              return r.start + u(t) + r.end
            })
            .replace(t.encode || a, function(e, t) {
              return (s = !0), r.startencode + u(t) + r.end
            })
            .replace(t.conditional || a, function(e, t, n) {
              return t
                ? n
                  ? "';}else if(" + u(n) + "){out+='"
                  : "';}else{out+='"
                : n
                ? "';if(" + u(n) + "){out+='"
                : "';}out+='"
            })
            .replace(t.iterate || a, function(e, t, n, r) {
              return t
                ? ((l += 1),
                  (f = r || 'i' + l),
                  (t = u(t)),
                  "';var arr" +
                    l +
                    '=' +
                    t +
                    ';if(arr' +
                    l +
                    '){var ' +
                    n +
                    ',' +
                    f +
                    '=-1,l' +
                    l +
                    '=arr' +
                    l +
                    '.length-1;while(' +
                    f +
                    '<l' +
                    l +
                    '){' +
                    n +
                    '=arr' +
                    l +
                    '[' +
                    f +
                    "+=1];out+='")
                : "';} } out+='"
            })
            .replace(t.evaluate || a, function(e, t) {
              return "';" + u(t) + "out+='"
            }) +
          "';return out;"
        )
          .replace(/\n/g, '\\n')
          .replace(/\t/g, '\\t')
          .replace(/\r/g, '\\r')
          .replace(/(\s|;|\}|^|\{)out\+='';/g, '$1')
          .replace(/\+''/g, '')),
          s &&
            (t.selfcontained ||
              !i ||
              i._encodeHTML ||
              (i._encodeHTML = o.encodeHTMLSource(t.doNotSkipEncoded)),
            (d =
              "var encodeHTML = typeof _encodeHTML !== 'undefined' ? _encodeHTML : (" +
              o.encodeHTMLSource.toString() +
              '(' +
              (t.doNotSkipEncoded || '') +
              '));' +
              d))
        try {
          return new Function(t.varname, 'filters', d)
        } catch (e) {
          throw ('undefined' != typeof console &&
            console.log('无法创建这个模板函数: ' + d),
          e)
        }
      }),
        (o.render = function(e, t, n, i) {
          return (
            'object' !== (void 0 === n ? 'undefined' : r(n)) && (i = n = null),
            o.compile(e, n, i)(t, o.filters)
          )
        }),
        (o.renderDom = function(e, t, n, i, c) {
          ;('object' === (void 0 === e ? 'undefined' : r(e)) && e.tagName) ||
            (e = document.getElementById(e.replace(/^#/, ''))),
            (e.innerHTML = o.render(t, n, i, c))
        }),
        (o.compile = function(e, t, n) {
          'object' !== (void 0 === t ? 'undefined' : r(t)) && (n = t = null)
          var i = void 0
          return (
            o.cache[n]
              ? (i = o.cache[n])
              : ('object' === (void 0 === e ? 'undefined' : r(e)) && e.tagName
                  ? (e = e.innerHTML)
                  : 'string' != typeof e ||
                    /</.test(e) ||
                    (e = (e = document.getElementById(e.replace(/^#/, '')))
                      ? e.innerHTML
                      : ''),
                (i = o.template(e, null, t)),
                n && (o.cache[n] = i)),
            i
          )
        }),
        (e.exports = o)
    }
  ])
})
